<%- contentFor('HeaderCss') %>

<style>
  html,
  body {
    height: 100%;
    margin: 0;
    padding: 0;
  }
  #gantt_here {
    width: 100%;
    height: 600px;
  }
  /* ✅ Default phase (parent) bars will remain blue */
  .gantt_task_line {
    background-color: #007bff; /* Default blue for phases */
  }

  /* ✅ Custom colors for projects */
  .green .gantt_task_content {
    background-color: #28a745 !important;
    color: white;
  }

  .yellow .gantt_task_content {
    background-color: #ffc107 !important;
    color: black;
  }

  .red .gantt_task_content {
    background-color: #dc3545 !important;
    color: white;
  }
</style>

<%- contentFor('breadcrumb') %>
<div class="row">
  <div class="col-md-4">
    <button type="button" class="button-menu-mobile open-left waves-effect">
      <i class="ion-navicon"></i>
    </button>
    <h3 class="page-title">Flight Plan</h3>
  </div>
  <% include ../Partials/portfolio_name %>
  <div class="col-md-4 text-right">
    <!-- Add any additional content here -->
  </div>
</div>

<%- contentFor('body') %>
<div class="page-content-wrapper">
  <div class="container-fluid">
    <div id="gantt_here" style="width: 1200px; height: 400px"></div>
  </div>
</div>

<%- contentFor('FooterJs') %>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Fetch project data from your API
    fetch("/projects/flightview/ganttChart/")
      .then((response) => response.json())
      .then((pData) => {
        const projects = pData.companyProjects;
        console.log("Fetched Projects:", projects);

        const phaseMapping = {
          2: { id: 2, text: "Planning", open: true, type: "phase" },
          3: { id: 3, text: "Discovery", open: true, type: "phase" },
          4: { id: 4, text: "Delivery", open: true, type: "phase" },
        };

        const categories = Object.values(phaseMapping);

        const filteredProjects = projects.filter(
          (project) =>
            project.phase_id_fk === 2 ||
            project.phase_id_fk === 3 ||
            project.phase_id_fk === 4,
        );

        const colorMapping = {
          Green: "#28a745",
          Yellow: "#ffc107",
          Red: "#dc3545",
        };

        const tasks = {
          data: filteredProjects.map((project) => {
            const phaseId = phaseMapping[project.phase_id_fk]?.id;
            console.log(
              `Mapping Project: ${project.project_name}, Phase: ${project.phase_id_fk}, Mapped Parent ID: ${phaseId}`,
            );
            return {
              id: project.id + 1000,
              text: project.project_name,
              start_date: new Date(project.start_date).toLocaleDateString(
                "en-GB",
              ),
              duration: Math.ceil(
                (new Date(project.end_date) - new Date(project.start_date)) /
                  (1000 * 60 * 60 * 24),
              ),
              parent: phaseId || null,
              color: colorMapping[project.health] || "#000000",
              type: "task",
            };
          }),
          links: [],
        };

        const sortedData = [...categories, ...tasks.data].sort((a, b) =>
          a.id === 2 ? -1 : 1,
        );

        gantt.init("gantt_here");
        gantt.parse({ data: sortedData });

        gantt.templates.task_class = function (start, end, task) {
          if (task.type === "phase") return "";

          if (task.health && typeof task.health === "string") {
            return task.health.toLowerCase();
          }

          return "";
        };
      });
  });

  gantt.config.scales = [
    {
      unit: "month",
      step: 1,
      format: "%M %Y",
    },
    {
      unit: "quarter",
      step: 1,
      format: function (date) {
        const quarter = Math.floor(date.getMonth() / 3) + 1;
        return "Q" + quarter;
      },
    },
  ];

  gantt.config.scale_height = 60;
  gantt.config.columns = [
    { name: "text", label: "Project Name", tree: true, width: "200" },
    { name: "start_date", label: "Start Date", align: "center" },
  ];
</script>

<%- contentFor('BottomJs') %>
