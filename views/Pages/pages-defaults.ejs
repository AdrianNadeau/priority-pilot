<%- contentFor('HeaderCss') %>
<!-- Bootstrap CSS -->
<style>
  .mdi-pencil:hover, .mdi-delete:hover {
    color: #007bff; /* Change to your desired hover color */
    cursor: pointer;
  }
</style>

<%- contentFor('breadcrumb') %>
<div class="row">
  <div class="col-md-4">
    <button type="button" class="button-menu-mobile open-left waves-effect">
      <i class="ion-navicon"></i>
    </button>
    <h3 class="page-title">Defaults</h3>
    
  </div>
  <% include ../Partials/portfolio_name %>
  <div class="col-md-4 text-right">
    <!-- Add any additional content here -->
  </div>
</div>

<%- contentFor('body') %>
<div class="page-content-wrapper">
  <div class="container-fluid">
    <div class="row">
      <div class="col-lg-12">
        <div class="card-body" style="border:0px !important;">
          <form action="/companies/set/defaults" class="needs-validation" id="editDefaultsForm" novalidate method="POST">
            <input type="hidden" id="company_id" name="company_id" value="<%= company.id %>">

            <div class="row">
              <div class="col-md-6">
                <!-- First column of form fields -->
                <div class="form-group needs-validation" novalidate>
                  <label for="company_headline">Portfolio Name:</label>
                  <input type="text" class="form-control" id="company_headline" name="company_headline" value="<%= company.company_headline %>">
                  <div class="invalid-feedback">
                    Portfolio Name.
                  </div>
                </div>
                <div class="form-group needs-validation" novalidate>
                  <label for="portfolio_budget">Portfolio Budget ($)</label>
                  <input type="text" class="form-control" id="portfolio_budget" oninput="formatNumberWithCommas(this);" name="portfolio_budget" value="<%= company.portfolio_budget %>">
                  <div class="invalid-feedback">
                    Please enter Portfolio Budget.
                  </div>
                </div>
                <div class="form-group needs-validation" novalidate>
                  <label for="portfolio_effort">Portfolio Effort (Person Hours)</label>
                  <input type="text" class="form-control" id="portfolio_effort" oninput="formatNumberWithCommas(this);" name="portfolio_effort" value="<%= company.effort %>">
                  <div class="invalid-feedback">
                    Please enter Portfolio Effort.
                  </div>
                </div>
                
                <div class="form-group needs-validation" novalidate>
                  <label for="timezone">Timezone</label>
                  <select class="form-control" id="timezone" name="company_timezone">
                    <option value="">Select Timezone</option>
                    <% const timezones = [
                      "Pacific/Midway",
                      "Pacific/Honolulu",
                      "America/Juneau",
                      "America/Los_Angeles",
                      "America/Tijuana",
                      "America/Denver",
                      "America/Phoenix",
                      "America/Chihuahua",
                      "America/Mazatlan",
                      "America/Chicago",
                      "America/Regina",
                      "America/Mexico_City",
                      "America/Monterrey",
                      "America/Guatemala",
                      "America/New_York",
                      "America/Indiana/Indianapolis",
                      "America/Bogota",
                      "America/Lima",
                      "America/Halifax",
                      "America/Caracas",
                      "America/La_Paz",
                      "America/Santiago",
                      "America/St_Johns",
                      "America/Sao_Paulo",
                      "America/Argentina/Buenos_Aires",
                      "America/Guyana",
                      "America/Godthab",
                      "Atlantic/South_Georgia",
                      "Atlantic/Azores",
                      "Atlantic/Cape_Verde",
                      "Europe/Dublin",
                      "Europe/Lisbon",
                      "Europe/London",
                      "Africa/Casablanca",
                      "Africa/Monrovia",
                      "Etc/UTC",
                      "Europe/Belgrade",
                      "Europe/Bratislava",
                      "Europe/Budapest",
                      "Europe/Ljubljana",
                      "Europe/Prague",
                      "Europe/Sarajevo",
                      "Europe/Skopje",
                      "Europe/Warsaw",
                      "Europe/Zagreb",
                      "Europe/Brussels",
                      "Europe/Copenhagen",
                      "Europe/Madrid",
                      "Europe/Paris",
                      "Europe/Amsterdam",
                      "Europe/Berlin",
                      "Europe/Rome",
                      "Europe/Stockholm",
                      "Europe/Vienna",
                      "Europe/Zurich",
                      "Europe/Athens",
                      "Europe/Bucharest",
                      "Africa/Cairo",
                      "Africa/Harare",
                      "Europe/Helsinki",
                      "Europe/Kiev",
                      "Europe/Riga",
                      "Europe/Sofia",
                      "Europe/Tallinn",
                      "Europe/Vilnius",
                      "Europe/Minsk",
                      "Europe/Moscow",
                      "Europe/Volgograd",
                      "Europe/Samara",
                      "Asia/Kuwait",
                      "Asia/Riyadh",
                      "Africa/Nairobi",
                      "Asia/Baghdad",
                      "Asia/Tehran",
                      "Asia/Muscat",
                      "Asia/Baku",
                      "Asia/Tbilisi",
                      "Asia/Yerevan",
                      "Asia/Kabul",
                      "Asia/Yekaterinburg",
                      "Asia/Karachi",
                      "Asia/Tashkent",
                      "Asia/Kolkata",
                      "Asia/Kathmandu",
                      "Asia/Dhaka",
                      "Asia/Colombo",
                      "Asia/Almaty",
                      "Asia/Novosibirsk",
                      "Asia/Rangoon",
                      "Asia/Bangkok",
                      "Asia/Jakarta",
                      "Asia/Krasnoyarsk",
                      "Asia/Shanghai",
                      "Asia/Chongqing",
                      "Asia/Hong_Kong",
                      "Asia/Urumqi",
                      "Asia/Kuala_Lumpur",
                      "Asia/Singapore",
                      "Asia/Taipei",
                      "Australia/Perth",
                      "Asia/Irkutsk",
                      "Asia/Ulaanbaatar",
                      "Asia/Seoul",
                      "Asia/Tokyo",
                      "Asia/Yakutsk",
                      "Australia/Darwin",
                      "Australia/Adelaide",
                      "Australia/Sydney",
                      "Australia/Brisbane",
                      "Australia/Hobart",
                      "Asia/Vladivostok",
                      "Pacific/Guam",
                      "Asia/Magadan",
                      "Pacific/Fiji",
                      "Asia/Kamchatka",
                      "Pacific/Auckland",
                      "Pacific/Tongatapu"
                    ]; %>
                    <% timezones.forEach(function(timezone) { %>
                      <option value="<%= timezone %>" <%= timezone === company.company_timezone ? 'selected' : '' %>><%= timezone %></option>
                    <% }); %>
                  </select>
                  <div class="invalid-feedback">
                    Please select a Timezone.
                  </div>
                </div>
                <div class="modal-footer text-center">
                  <button type="button" class="btn btn-secondary waves-effect" onclick="window.location.replace('/')">Cancel</button>
                  <button class="btn btn-primary w-md waves-effect waves-light" type="submit">Update</button>
                  
                </div>
                <div class="required_star">* To save default values, Update must be clicked.</div>
                
              </div>
              <div class="col-md-6">
                <!-- Second column of form fields -->
                <div class="form-group needs-validation" novalidate>
                  <label for="tags">Company Tags</label>
                  <!-- Loop through tags if exists for company -->
                  <% tags.forEach(function(tag) { %>
                    <li>
                      <%= tag.tag_name %>
                      <% if (tag.company_id_fk === 0) { %>
                        <strong>(system tag)</strong>
                      <% } else { %>
                        <i class="mdi mdi-pencil" data-toggle="modal" data-target="#editTagModal" onclick="editTag('<%= tag.id %>', '<%= tag.tag_name %>', '<%= tag.company_id_fk %>')" title="Edit Tag"></i>
                        <i class="mdi mdi-delete" data-toggle="modal" data-target="#deleteTagModal" onclick="deleteTag('<%= tag.id %>', '<%= tag.tag_name %>', '<%= tag.company_id_fk %>')" title="Delete Tag"></i>
                      <% } %>
                    </li>
                  <% }); %>
                  <br/>
                </form>
                  <form action="/tags" class="needs-validation" id="addTag" novalidate method="POST">
                  <div class="form-group needs-validation" novalidate>
                    <label for="company_tag">New Tag</label>
                    <input type="text" class="form-control" id="company_tag" name="company_tag">
                    <div class="invalid-feedback">
                      Enter Tag Name.
                    </div>
                  </div>
                  <div class="modal-footer">
                    <button class="btn btn-primary w-md waves-effect waves-light" type="submit">Add</button>
                  </div>
                </form>
              </div>
            
          </div>

                  
                              
                           
                      
            
         
          
        </div>
      </div>
    </div>
  </div>
</div>

<%- contentFor('FooterJs') %>
<%- contentFor('BottomJs') %>

<!-- Edit Tag Modal -->
<div class="modal fade" id="editTagModal" tabindex="-1" role="dialog" aria-labelledby="editTagModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editTagModalLabel">Edit Tag</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form id="editTagForm" class="needs-validation" novalidate>
          <input type="hidden" id="tag_id" name="tag_id">
          <input type="hidden" id="company_id_fk" name="company_id_fk">
          <div class="form-group">
            <label for="tag_name">Tag Name</label>
            <input type="text" class="form-control" id="tag_name" name="tag_name" required>
            <div class="invalid-feedback">
              Enter Tag Name.
            </div>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" onclick="saveTag()">Save changes</button>
      </div>
    </div>
  </div>
</div>
<!-- Delete Tag Modal -->
<div class="modal fade" id="deleteTagModal" tabindex="-1" role="dialog" aria-labelledby="deleteTagModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="deleteTagModalLabel">Remove Tag</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form id="deleteTagForm" class="needs-validation" novalidate>
          <input type="hidden" id="delete_tag_id" name="tag_id">
          <input type="hidden" id="delete_company_id_fk" name="company_id_fk">
          <div class="form-group">
            <label for="delete_tag_name">Tag Name</label>
            <p id="delete_tag_name" class="form-control-plaintext"></p>
          </div>
          <div class="form-group">
            <p>Are you sure you want to delete this tag?</p>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-danger" onclick="confirmDeleteTag()">Remove</button>
      </div>
    </div>
  </div>
</div>

<script>
  (function () {
    'use strict'

    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.querySelectorAll('.needs-validation')

    // Loop over them and prevent submission
    Array.prototype.slice.call(forms)
      .forEach(function (form) {
        form.addEventListener('submit', function (event) {
          if (!form.checkValidity()) {
            event.preventDefault()
            event.stopPropagation()
          }

          form.classList.add('was-validated')
        }, false)
      })
  })()

  document.addEventListener("DOMContentLoaded", function() {
    // Handle timezone form
    const timezoneSelect = document.getElementById('timezone');
    if (timezoneSelect) {
      const userTimezone = getUserTimezone();
      if (!timezoneSelect.value) {
        timezoneSelect.value = userTimezone;
      }
    }

    function getUserTimezone() {
      return Intl.DateTimeFormat().resolvedOptions().timeZone;
    }
 function saveTag() {
  const form = document.getElementById('editTagForm');
  if (!form) {
    console.error('editTagForm not found');
    return;
  }
  const tagNameInput = document.getElementById('tag_name');
  if (!form.checkValidity() || !tagNameInput.value.trim()) {
    form.classList.add('was-validated');
    tagNameInput.classList.add('is-invalid');
    return;
  } else {
    tagNameInput.classList.remove('is-invalid');
  }

  const url = '/tags/' + document.getElementById('tag_id').value;
  const formData = new FormData(form);

  fetch(url, {
    method: 'PUT',
    body: new URLSearchParams(formData),
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded'
    }
  })
  .then(response => {
    if (response.redirected) {
      window.location.href = response.url;
    } else {
      return response.json();
    }
  })
  .then(data => {
    console.log('Success:', data);
    $('#editTagModal').modal('hide');
    window.location.replace('/companies/get/defaults');
  })
  .catch((error) => {
    console.error('Error:', error);
  });
}
    // Show and hide modals with inert attribute
    $('#editTagModal').on('show.bs.modal', function () {
      this.removeAttribute('inert');
    });

    $('#editTagModal').on('hidden.bs.modal', function () {
      this.setAttribute('inert', '');
    });

    $('#deleteTagModal').on('show.bs.modal', function () {
      this.removeAttribute('inert');
    });

    $('#deleteTagModal').on('hidden.bs.modal', function () {
      this.setAttribute('inert', '');
    });
  });

  function editTag(tagId, tagName, companyId) {
    document.getElementById('tag_id').value = tagId;
    document.getElementById('tag_name').value = tagName;
    document.getElementById('company_id_fk').value = companyId;
  }

  function saveTag() {
  const form = document.getElementById('editTagForm');
  const tagNameInput = document.getElementById('tag_name');
  if (!form.checkValidity() || !tagNameInput.value.trim()) {
    form.classList.add('was-validated');
    tagNameInput.classList.add('is-invalid');
    return;
  } else {
    tagNameInput.classList.remove('is-invalid');
  }

  const url = '/tags/' + document.getElementById('tag_id').value;
  const formData = new FormData(form);

  fetch(url, {
    method: 'PUT',
    body: new URLSearchParams(formData),
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded'
    }
  })
  .then(response => {
    if (response.redirected) {
      window.location.href = response.url;
    } else {
      return response.json();
    }
  })
  .then(data => {
    console.log('Success:', data);
    $('#editTagModal').modal('hide');
    window.location.replace('/companies/get/defaults');
  })
  .catch((error) => {
    console.error('Error:', error);
  });
}

  function deleteTag(tagId, tagName, companyId) {
    document.getElementById('delete_tag_id').value = tagId;
    document.getElementById('delete_tag_name').textContent = tagName;
    document.getElementById('delete_company_id_fk').value = companyId;
  }

  function confirmDeleteTag() {
    const form = document.getElementById('deleteTagForm');
    const url = '/tags/' + document.getElementById('delete_tag_id').value;

    fetch(url, {
      method: 'DELETE',
      body: new URLSearchParams(new FormData(form)),
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded'
      }
    })
    .then(response => {
      if (response.redirected) {
        window.location.href = response.url;
      } else {
        return response.json();
      }
    })
    .then(data => {
      console.log('Success:', data);
      $('#deleteTagModal').modal('hide');
      window.location.replace('/companies/get/defaults');
    })
    .catch((error) => {
      console.error('Error:', error);
    });
  }
</script>